/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package test;

import java.net.Socket;
import javax.swing.SwingUtilities;
import javax.swing.UIManager;
import communication.manager.core.CommunicationClient;
import communication.manager.core.CommunicationManagerListener;
import communication.manager.core.CommunicationServer;
import communication.manager.core.MessageReceiveListener;
import communication.manager.multicast.MulticastReceiver;
import communication.manager.multicast.MulticastSender;

/**
 * @author Keshan De Silva
 * Created on Oct 7, 2014
 */
public class TestUI extends javax.swing.JFrame
{
    CommunicationServer communicationServer;
    CommunicationClient communicationClient;
    
    public TestUI()
    {
        try
        {
            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
        }
        catch (Exception ex){}
        
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        btnStartServer = new javax.swing.JButton();
        btnConnect = new javax.swing.JButton();
        txtSourceText = new javax.swing.JTextField();
        btnSend = new javax.swing.JButton();
        txtClientID = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtLog = new javax.swing.JTextArea();
        btnStartMulticast = new javax.swing.JButton();
        btnJoin = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnStartServer.setText("Start Server");
        btnStartServer.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btnStartServerActionPerformed(evt);
            }
        });

        btnConnect.setText("Connect");
        btnConnect.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btnConnectActionPerformed(evt);
            }
        });

        btnSend.setText("Send");
        btnSend.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btnSendActionPerformed(evt);
            }
        });

        txtLog.setEditable(false);
        txtLog.setColumns(20);
        txtLog.setRows(5);
        jScrollPane1.setViewportView(txtLog);

        btnStartMulticast.setText("Multicast");
        btnStartMulticast.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btnStartMulticastActionPerformed(evt);
            }
        });

        btnJoin.setText("Join");
        btnJoin.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btnJoinActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnStartServer, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnConnect, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(txtSourceText, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtClientID, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(btnSend, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                                .addComponent(btnStartMulticast, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(btnJoin, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnStartServer)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnConnect)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtSourceText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSend)
                    .addComponent(txtClientID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnStartMulticast)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnJoin)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnStartServerActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnStartServerActionPerformed
    {//GEN-HEADEREND:event_btnStartServerActionPerformed
        communicationServer = new CommunicationServer();
        communicationServer.startCommunication(1111);
        communicationServer.addMessageReceiveListener(new MessageReceiveListener()
        {
            @Override
            public void onMessageReceived(String message, int clientID)
            {
                txtLog.setText(txtLog.getText() + "\nReceived : " + clientID + " : " + message);
            }
        });
        
        communicationServer.addCommunicationManagerListener(new CommunicationManagerListener()
        {

            @Override
            public void onConnected(int clientID, Socket communicationSocket)
            {
                txtLog.setText(txtLog.getText() + "\nConnected : " + clientID + " : " + communicationSocket.getInetAddress().getHostName());
                //communicationSocket.getRemoteSocketAddress().toString();
            }

            @Override
            public void onDisconnected(int clientID, Socket communicationSocket)
            {
                txtLog.setText(txtLog.getText() + "\nDisconnected : " + clientID + " : " + communicationSocket.getInetAddress().getHostName());
            }
        });
    }//GEN-LAST:event_btnStartServerActionPerformed

    private void btnConnectActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnConnectActionPerformed
    {//GEN-HEADEREND:event_btnConnectActionPerformed
        communicationClient = new CommunicationClient();
        communicationClient.startCommunication("192.168.3.79", 1111);
        
        communicationClient.addMessageReceiveListener(new MessageReceiveListener()
        {
            @Override
            public void onMessageReceived(String message, int clientID)
            {
                txtLog.setText(txtLog.getText() + "\nReceived" + clientID + " : " + message);
            }
        });
        
        communicationClient.addCommunicationManagerListener(new CommunicationManagerListener()
        {

            @Override
            public void onConnected(int clientID, Socket communicationSocket)
            {
                txtLog.setText(txtLog.getText() + "\nConnected : " + clientID + " : " + communicationSocket.getInetAddress().getHostName());
            }

            @Override
            public void onDisconnected(int clientID, Socket communicationSocket)
            {
                txtLog.setText(txtLog.getText() + "\nDisconnected : " + clientID + " : " + communicationSocket.getInetAddress().getHostName());
            }
        });
    }//GEN-LAST:event_btnConnectActionPerformed

    private void btnSendActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnSendActionPerformed
    {//GEN-HEADEREND:event_btnSendActionPerformed
        if (communicationServer != null)
        {
            communicationServer.sendString(Integer.parseInt(txtClientID.getText()), txtSourceText.getText());
            txtLog.setText(txtLog.getText() + "\nSend : " + txtClientID.getText() + " : " + txtSourceText.getText());
        }
        else
        {
            communicationClient.sendString(0, txtSourceText.getText());
            txtLog.setText(txtLog.getText() + "\nSend : " + 0 + " : " + txtSourceText.getText());
        }
    }//GEN-LAST:event_btnSendActionPerformed

    private void btnStartMulticastActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnStartMulticastActionPerformed
    {//GEN-HEADEREND:event_btnStartMulticastActionPerformed
        MulticastSender multicastSender = new MulticastSender();
        multicastSender.startMulticastCommunication(8888);
    }//GEN-LAST:event_btnStartMulticastActionPerformed

    private void btnJoinActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnJoinActionPerformed
    {//GEN-HEADEREND:event_btnJoinActionPerformed
        MulticastReceiver multicastReceiver = new MulticastReceiver();
        multicastReceiver.startMulticastCommunication(8888);
    }//GEN-LAST:event_btnJoinActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Create and display the form */
        SwingUtilities.invokeLater(new Runnable()
        {
            @Override
            public void run()
            {
                new TestUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnConnect;
    private javax.swing.JButton btnJoin;
    private javax.swing.JButton btnSend;
    private javax.swing.JButton btnStartMulticast;
    private javax.swing.JButton btnStartServer;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField txtClientID;
    private javax.swing.JTextArea txtLog;
    private javax.swing.JTextField txtSourceText;
    // End of variables declaration//GEN-END:variables

}
